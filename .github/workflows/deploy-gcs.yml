name: Deploy to Google Cloud Storage
on:
  workflow_run:
    workflows: ["Release by GoReleaser"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Release workflow run ID (for artifact download)'
        required: true
        type: string
      version:
        description: 'Version to deploy (for GCS path)'
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id || inputs.run_id }}

      - name: Get version from artifacts
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ inputs.version }}" ]]; then
            VERSION="${{ inputs.version }}"
          else
            # Extract version from metadata.json
            if [[ -f "dist/metadata.json" ]]; then
              VERSION=$(cat dist/metadata.json | grep -o '"tag":"[^"]*' | cut -d'"' -f4)
            else
              VERSION="unknown"
            fi
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Show deployment info
        run: |
          echo "üîç Deployment Information:"
          echo "  Event: ${{ github.event_name }}"
          echo "  Version: ${{ steps.version.outputs.version }}"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "  Run ID: ${{ inputs.run_id }}"
            echo "  Input Version: ${{ inputs.version }}"
          fi
          echo
          echo "üì¶ Available archives in dist/:"
          ls -la dist/*.tar.gz 2>/dev/null || echo "No .tar.gz files found"
          ls -la dist/*.zip 2>/dev/null || echo "No .zip files found"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Google Cloud Storage
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          GCS_BUCKET="${{ secrets.GCS_BUCKET }}"

          echo "üöÄ Deploying version $VERSION to GCS..."

          # Upload all archives from dist/ directory with version/archive-name structure
          for archive in dist/*.tar.gz dist/*.zip; do
            if [[ -f "$archive" ]]; then
              filename=$(basename "$archive")
              gsutil cp "$archive" "gs://${GCS_BUCKET}/${VERSION}/${filename}"
              echo "‚úÖ Uploaded: gs://${GCS_BUCKET}/${VERSION}/${filename}"
            fi
          done

      - name: Set public access (optional)
        if: vars.GCS_PUBLIC_ACCESS == 'true'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          GCS_BUCKET="${{ secrets.GCS_BUCKET }}"

          echo "üåê Setting public access..."

          # Make files publicly accessible
          gsutil -m acl ch -r -u AllUsers:R "gs://${GCS_BUCKET}/${VERSION}/"

          echo "‚úÖ Files are now publicly accessible"
